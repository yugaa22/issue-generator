# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  
jobs:
  gradle-igor:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout OpsMx Igor repo
      uses: actions/checkout@v3
      with:
        repository: opsmx/igor
        ref: refs/heads/release-1.28.x
    - uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 11
    - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
    - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
    - name: List files in the repository
      run: |
          ls ${{ github.workspace }}
    - run: echo "üçè This job's status is ${{ job.status }}."
    - name: List files in the repository and the branch 
      run: |
          ls ${{ github.workspace }} 
          git branch
    - uses: gradle/gradle-build-action@v2
      with:
        gradle-version: release-candidate
    - run: ./gradlew build #--dry-run just test build configuration
